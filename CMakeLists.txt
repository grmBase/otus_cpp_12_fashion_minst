cmake_minimum_required(VERSION 3.2)

set(PATCH_VERSION "1" CACHE INTERNAL "Patch version")
set(PROJECT_VESRION 0.0.${PATCH_VERSION})


# имя проекта
project(fashion_mnist VERSION ${PROJECT_VESRION})






# имя основной утилиты будет таким же как и имя проекта?
add_executable(fashion_mnist
  src/helpers.cpp
  src/linreg_predictor.cpp
  src/main.cpp
)



set_target_properties(fashion_mnist PROPERTIES
    CXX_STANDARD 17
    CXX_STANDARD_REQUIRED ON
)



target_include_directories(fashion_mnist PUBLIC
${PROJECT_SOURCE_DIR}/./
)



# пока не буду делать библиотеку, но по идее потом может и надо буует
#add_library(helloworld lib.cpp)
#add_executable(test_version test_version.cpp)

target_include_directories(fashion_mnist
    PRIVATE "${CMAKE_BINARY_DIR}"
)




if (MSVC)
    target_compile_options(fashion_mnist PRIVATE
        /W4
    )
else ()
    target_compile_options(fashion_mnist PRIVATE
        -Wall -Wextra -pedantic -Werror
    )
endif()



install(TARGETS fashion_mnist RUNTIME DESTINATION bin)

set(CPACK_GENERATOR DEB)

set(CPACK_PACKAGE_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${PROJECT_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "${PROJECT_VERSION_PATCH}")

set(CPACK_PACKAGE_CONTACT example@example.com)

include(CPack)

